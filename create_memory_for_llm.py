# -*- coding: utf-8 -*-
"""Customer support assitant.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kWXgLYZ_W5KHtRE0mzxUDlZLBuFsJzkg
"""

from langchain_text_splitters import RecursiveCharacterTextSplitter
from langchain_community.document_loaders import PyPDFLoader
from langchain_huggingface import HuggingFaceEmbeddings
from langchain_community.vectorstores import FAISS

#Extracting data
def extract_data(path):
  loader = PyPDFLoader(file_path=path,)
  data = loader.load()
  return data

#Creating chunks of the data
def create_chunks(data):
  create_chunks = RecursiveCharacterTextSplitter(
      chunk_size = 1000,
      chunk_overlap  = 200,
      length_function = len,
  )
  chunks = create_chunks.split_documents(data)
  return chunks

extracted_data = extract_data('SmartFinder.Store Customer Support Manual.pdf')

# creating a vector store data base
def create_embedding_model(model_name):
  embedding_model = HuggingFaceEmbeddings(model_name=model_name)
  return embedding_model

def create_vector_store(chunks, embedding_model):
  vector_store = FAISS.from_documents(chunks, embedding_model)
  return vector_store

save_path = "vectorstore/faiss"
embedding_model = create_embedding_model('sentence-transformers/all-MiniLM-L6-v2')
vector_store = create_vector_store(extracted_data, embedding_model)
vector_store.save_local(save_path)

